// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"github.com/PickHD/quote-echo-grpc/configs"
	"github.com/PickHD/quote-echo-grpc/internal/closer"
	"github.com/PickHD/quote-echo-grpc/internal/common"
	"github.com/PickHD/quote-echo-grpc/internal/controller"
	"github.com/PickHD/quote-echo-grpc/internal/infra"
	"github.com/PickHD/quote-echo-grpc/internal/repository"
	"github.com/PickHD/quote-echo-grpc/internal/service"
)

// Injectors from wire.go:

func InitializeServer(name string) (*common.Server, error) {
	config := configs.NewConfig()
	logger := common.NewLogger()
	pool, err := infra.NewPostgreSQLPool(config)
	if err != nil {
		return nil, err
	}
	quoteRepositoryImpl := repository.NewQuoteRepositoryImpl(config, pool, logger)
	quoteServiceImpl := service.NewQouteServiceImpl(config, quoteRepositoryImpl)
	grpcServer := controller.NewGrpcServer(config, logger, quoteServiceImpl)
	router := controller.NewRouter(grpcServer)
	infraCloser := closer.NewInfraCloser(pool)
	server := common.NewServer(name, router, infraCloser, logger)
	return server, nil
}
